// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"learn/check_status/client"
	"learn/check_status/config"
	"learn/check_status/controller"
	"learn/check_status/dao"
	"learn/check_status/route"
	"learn/check_status/service"
	"learn/check_status/tool"
)

// Injectors from wire.go:

func InitApp(cfg string) (*route.App, error) {
	viperSetting := config.NewViperSetting(cfg)
	accountConfig := config.NewAccount(viperSetting)
	clientClient := client.NewClient(accountConfig)
	redisConfig := config.NewRedisConfig(viperSetting)
	redisClient, err := dao.RedisDB(redisConfig)
	if err != nil {
		return nil, err
	}
	mysqlConfig := config.NewMysqlConfig(viperSetting)
	db, err := dao.MySqlDB(mysqlConfig)
	if err != nil {
		return nil, err
	}
	checkDAOImpl := dao.NewCheckDAO(redisClient, db)
	qqConfig := config.NewQQConfig(viperSetting)
	mail := tool.NewMail(qqConfig)
	check := service.NewCheck(clientClient, checkDAOImpl, mail)
	checkController := controller.NewCheckController(check)
	checkRoute := route.NewCheckRoute(checkController)
	app := route.NewApp(checkRoute)
	return app, nil
}
